
# -------------------------------------------------------------------
# 문제 1: 일부 코드 작성 - 학교 점심 주문하기
# -------------------------------------------------------------------
'''
문제 설명:
학교 매점에서 점심을 주문하는 프로그램을 만들어봅시다. 메뉴와 가격이 주어져 있고, 
사용자가 선택한 메뉴의 총 가격을 계산해야 합니다.

힌트:
- 이미 작성된 코드에서 `총_가격` 변수를 계산하는 부분을 작성해야 합니다.
- 각 메뉴의 가격과 수량을 곱한 후 모두 더해야 합니다.
'''

# 메뉴와 가격
# 김밥 = 3000
# 라면 = 3500
# 떡볶이 = 4000
# 돈까스 = 5500
# 총_가격 = 0

# # 주문 수량 입력받기
# 김밥_수량 = int(input("김밥 몇 개를 주문하시겠습니까? "))
# 라면_수량 = int(input("라면 몇 개를 주문하시겠습니까? "))
# 떡볶이_수량 = int(input("떡볶이 몇 개를 주문하시겠습니까? "))
# 돈까스_수량 = int(input("돈까스 몇 개를 주문하시겠습니까? "))

# # 여기에 총 가격을 계산하는 코드를 작성하세요
# 총_가격 = (김밥*김밥_수량) + (김밥*김밥_수량) + (김밥*김밥_수량) + (김밥*김밥_수량)

# print(f"총 주문 금액은 {총_가격}원 입니다.")


# -------------------------------------------------------------------
# 문제 2: 스스로 작성 - 용돈 관리 프로그램
# -------------------------------------------------------------------
'''
문제 설명:
한 달 동안의 용돈을 관리하는 간단한 프로그램을 만들어봅시다. 사용자에게 총 용돈과 
지출 항목들의 금액을 입력받아 남은 용돈을 계산하고, 용돈이 부족한지 여부를 알려주는 프로그램입니다.

힌트:
- 변수를 사용해 총 용돈과 각 지출 항목을 저장합니다.
- 입력 함수 `input()`과 형변환 함수 `int()`를 사용합니다.
- 남은 용돈을 계산하고 조건문(`if`, `else`)을 사용해 용돈이 부족한지 확인합니다.
'''

# # 여기에 코드를 작성하세요
# 용돈 = 100000
# 식비 = 0
# 교통비 = 0
# 도서구입비 = 0
# 유흥비 = 0
# 사용용돈합 = 

# 용돈 = int(input())




# # -------------------------------------------------------------------
# # 문제 3: 디버깅 - 평균 점수 계산기
# # -------------------------------------------------------------------
# '''
# 문제 설명:
# 시험 점수의 평균을 계산하는 프로그램입니다. 하지만 코드에 오류가 있어 제대로 작동하지 않습니다.
# 오류를 찾아 수정해보세요.

# 힌트:
# - 코드에는 1~2개의 오류가 있습니다.
# - 변수명과 수식을 주의 깊게 살펴보세요.
# # '''

# 평균 점수 계산기
# 국어 = int(input("국어 점수를 입력하세요: "))
# 영어 = input("영어 점수를 입력하세요: ")
# 수학 = input("수학 점수를 입력하세요: ")
# 과학 = input("과학 점수를 입력하세요: ")

# 총점 = int(국어) + 영어 + 수학 + 과학
# 평균 = 총점 / 4

# print(f"총점: {총점}점")
# print(f"평균: {평균}점")




# # -------------------------------------------------------------------
# # 문제 4: 일부 코드 작성 - 도서관 대출 기간 계산기
# # -------------------------------------------------------------------
# '''
# 문제 설명:
# 도서관에서 책을 대출할 때, 반납일을 계산하는 프로그램입니다. 대출 기간은 14일이며, 
# 사용자가 입력한 대출 권수에 따라 추가 대출 기간이 부여됩니다(책 한 권당 2일 추가, 최대 10일까지).

# 힌트:
# - 추가 대출 기간 계산 부분을 작성해야 합니다.
# - 조건문을 사용하여 최대 추가 기간을 제한하세요.
# '''

# # 도서관 대출 기간 계산기
# 기본_대출_기간 = 14  # 기본 대출 기간 14일
# 도서_수 = int(input("대출할 책의 권수를 입력하세요: "))
# 추가기간 = 0
# 총_대출_기간 = 0

# # 여기에 추가 대출 기간을 계산하는 코드를 작성하세요
# # 책 한 권당 2일씩 추가되지만, 최대 10일까지만 추가 가능합니다
# 추가기간 = 도서_수 * 2

# if 추가기간 >= 10:
#     추가기간 = 10

# 총_대출_기간 = 기본_대출_기간 + 추가기간

# print(f"{도서_수}권의 책을 대출했습니다.")
# print(f"총 대출 기간은 {총_대출_기간}일입니다.")


# -------------------------------------------------------------------
# 문제 5: 스스로 작성 - 학교 축제 수익금 계산기
# -------------------------------------------------------------------
'''
문제 설명:
학교 축제에서 운영하는 다과 판매대의 수익을 계산하는 프로그램을 만들어봅시다. 
판매한 음료와 과자의 수량을 입력받아 총 수익을 계산합니다.

힌트:
- 각 상품의 가격과 판매 수량을 변수로 저장합니다.
- 총 수익을 계산하는 방법을 생각해보세요.
- 마지막에 결과를 예쁘게 출력하세요.
'''

# # 여기에 코드를 작성하세요

# 음료가격 = 1000
# 과자가격 = 4000

# 음료수량 = int(input("음료몇개? : "))
# 과자수량 = int(input("과자몇개? : "))

# print(f"축제수익 : 음료 {음료가격*음료수량}원, 과자 {과자가격*과자수량}원, 토탈 {(음료가격*음료수량)+(과자가격*과자수량)}원")


# # -------------------------------------------------------------------
# # 문제 6: 디버깅 - 영화 관람료 계산기
# # -------------------------------------------------------------------
# '''
# 문제 설명:
# 영화관에서 나이에 따라 다른 요금을 부과하는 프로그램입니다. 하지만 코드에 오류가 있어 
# 제대로 작동하지 않습니다. 오류를 찾아 수정해보세요.

# 힌트:
# - 코드에는 2~3개의 오류가 있습니다.
# - 조건문의 조건과 들여쓰기를 주의 깊게 살펴보세요.
# '''

# 영화 관람료 계산기
나이 = int(input("나이를 입력하세요: "))

if 나이 < 8:
    요금 = 3000
    print("어린이 요금이 적용됩니다.")
elif 나이 < 19:
    요금 = 8000
    print("청소년 요금이 적용됩니다.")
elif 나이 < 65:
    요금 = 10000
    print("성인 요금이 적용됩니다.")
else:
    요금 = 5000
    print("경로 우대 요금이 적용됩니다.")

print(f"당신의 나이는 {나이}세이며, 관람료는 {요금}원입니다.")



# # # -------------------------------------------------------------------
# # # 문제 7: 일부 코드 작성 - 성적표 만들기
# # # -------------------------------------------------------------------
# # '''
# # 문제 설명:
# # 시험 점수를 입력받아 학점을 부여하는 프로그램입니다. 점수에 따라 A, B, C, D, F 학점을 부여합니다.

# # 힌트:
# # - 점수에 따라 학점을 부여하는 부분을 작성해야 합니다.
# # - 조건문(`if`, `elif`, `else`)을 사용하세요.
# # - 90점 이상은 A, 80점 이상은 B, 70점 이상은 C, 60점 이상은 D, 60점 미만은 F입니다.
# # '''

# # # 성적표 만들기
# 이름 = input("이름을 입력하세요: ")
# 점수 = int(input("점수를 입력하세요: "))
# 학점 = ""

# # 여기에 학점을 부여하는 코드를 작성하세요

# if 점수 >= 90:
#     학점 = "A"
# elif 점수 >= 80:
#     학점 = "B"
# elif 점수 >= 70:
#     학점 = "C"
# elif 점수 >= 60:
#     학점 = "D"
# else:
#     학점 = "F"


# # print(f"{이름}님의 점수는 {점수}점이며, 학점은 {학점}입니다.")



# # # -------------------------------------------------------------------
# # # 문제 8: 일부 코드 작성 - 쇼핑 목록 관리
# # # -------------------------------------------------------------------
# # '''
# # 문제 설명:
# # 쇼핑 목록을 관리하는 프로그램입니다. 사용자는 목록에 항목을 추가하거나 전체 목록을 확인할 수 있습니다.

# # 힌트:
# # - 리스트와 반복문을 사용해 목록을 관리합니다.
# # - 사용자가 'q'를 입력할 때까지 계속해서 항목을 추가할 수 있도록 합니다.
# # '''

# # # 쇼핑 목록 관리
# # 쇼핑_목록 = []
# # 입력 = ""

# # print("쇼핑 목록 관리 프로그램")
# # print("새로운 항목을 추가하려면 항목명을 입력하세요.")
# # print("종료하려면 'q'를 입력하세요.")

# # # 여기에 항목을 계속 입력받는 반복문을 작성하세요
# # while True:
# #     입력 = input("쇼핑목록을 입력해라. 끝내려면 q 입력")
# #     if 입력 ==  "q":
# #         break
# #     else:
# #         쇼핑_목록.append(입력)

# # print("\n===== 내 쇼핑 목록 =====")
# # for 항목 in 쇼핑_목록:
# #     print(f"- {항목}")
# # print("======================")




# # -------------------------------------------------------------------
# # 문제 9: 스스로 작성 - 주사위 게임
# # -------------------------------------------------------------------
# '''
# 문제 설명:
# 간단한 주사위 게임을 만들어봅시다. 컴퓨터와 사용자가 각각 주사위를 던져 높은 숫자가 나온 쪽이 
# 이기는 게임입니다. 사용자는 게임을 여러 번 진행할 수 있으며 최종 승패 결과를 보여줍니다.

# 힌트:
# - `random` 모듈의 `random.randint(시작 숫자, 끝 숫자)` 함수를 사용해 주사위 값을 생성합니다.
# - 반복문을 사용해 게임을 여러 번 진행할 수 있도록 합니다.
# - 변수를 사용해 승리, 패배, 무승부 횟수를 기록합니다.
# '''

# # 여기에 코드를 작성하세요

# # import random

# # 사용자굴림 = 0
# # 컴퓨터굴림 = 0
# # 사용자승리횟수 = 0
# # 컴퓨터승리횟수 = 0
# # 무승부 = 0

# # for _ in range(10):
# #     사용자굴림 = random.randint(1, 6)
# #     컴퓨터굴림 = random.randint(1, 6)
# #     if 사용자굴림 == 컴퓨터굴림:
# #         print(f"사용자 : {사용자굴림} / 컴퓨터 : {컴퓨터굴림} = 무승부")
# #         무승부 += 1
# #     elif 사용자굴림 > 컴퓨터굴림:
# #         print(f"사용자 : {사용자굴림} / 컴퓨터 : {컴퓨터굴림} = 사용자 승")
# #         사용자승리횟수 += 1
# #     else:
# #         print(f"사용자 : {사용자굴림} / 컴퓨터 : {컴퓨터굴림}  = 컴퓨터 승")
# #         컴퓨터승리횟수 += 1

# # print(f"결과를 발표합니다 당신이 이긴 횟수 {사용자승리횟수}회, 제가 이긴 횟수{컴퓨터승리횟수}회, 비긴 횟수{무승부}회 입니다!")
# # print(f"최종결과 제가 당신을 이겼어요")

# # # -------------------------------------------------------------------
# # # 문제 10: 디버깅 - 학급 출석부
# # # -------------------------------------------------------------------
# # '''
# # 문제 설명:
# # 학급 출석부 프로그램입니다. 학생 이름을 입력받아 출석 명단을 만들고, 
# # 특정 학생이 출석했는지 확인합니다. 코드에 오류가 있어 제대로 작동하지 않습니다. 
# # 오류를 찾아 수정해보세요.

# # 힌트:
# # - 코드에는 2~3개의 오류가 있습니다.
# # - 리스트 관련 함수와 반복문을 주의 깊게 살펴보세요.
# # '''

# 학급 출석부
# 학생_명단 = []

# # 학생 이름 입력받기
# for i in range(1, 4):
#     학생 = input(f"학생 {i}의 이름을 입력하세요: ")
#     학생_명단.append(학생)

# print("\n출석 명단:", 학생_명단)

# # 특정 학생 찾기
# 찾는_학생 = input("\n찾으려는 학생의 이름을 입력하세요: ")

# for 이름 in 학생_명단:
#     if 이름 == 찾는_학생:
#         print(f"{찾는_학생}(은)는 출석했습니다.")
#         출석 = True

# if not 출석:
#     print(f"{찾는_학생}(은)는 출석하지 않았습니다.")
