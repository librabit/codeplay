# 파이썬 초보자를 위한 연습문제 20개
# 변수, 입력/출력, 사칙연산, 조건문, 반복문, 리스트 등을 활용한 문제들입니다.



################ 1차 ##################


#############################################################
# 문제 1: 인사하기 (전체 코드 작성)
#############################################################
# 문제 설명
# 사용자의 이름을 입력받아 인사를 출력하는 프로그램을 작성하세요.
print("\n===== 문제 1: 인사하기 =====")
# 여기에 코드를 작성하세요.
# 힌트: input()으로 이름을 입력받고, print()로 인사말을 출력하세요.


#############################################################
# 문제 2: 짝수 홀수 구분 (전체 코드 작성)
#############################################################
# 문제 설명
# 사용자가 입력한 숫자가 짝수인지 홀수인지 판별하는 프로그램을 작성하세요.
print("\n===== 문제 2: 짝수 홀수 구분 =====")
# 여기에 코드를 작성하세요.
# 힌트: 2로 나눈 나머지가 0이면 짝수, 아니면 홀수입니다.


#############################################################
# 문제 3: 합계 구하기 (전체 코드 작성)
#############################################################
# 문제 설명
# 1부터 사용자가 입력한 숫자까지의 합을 구하는 프로그램을 작성하세요.
print("\n===== 문제 3: 합계 구하기 =====")
# 여기에 코드를 작성하세요.
# 힌트: for 반복문을 사용하여 1부터 입력받은 숫자까지 더하세요.


#############################################################
# 문제 4: 과일 목록 (빈칸 채우기)
#############################################################
# 문제 설명
# 좋아하는 과일 목록을 만들고 출력하는 프로그램입니다.
# 빈칸을 채워 프로그램을 완성하세요.
print("\n===== 문제 4: 과일 목록 =====")

fruits = ["사과", "바나나", ________] # 빈칸 1: 좋아하는 과일을 추가하세요

print("내가 좋아하는 과일:")
for fruit in fruits:
    print(________)  # 빈칸 2: 과일 이름을 출력하는 코드를 작성하세요


#############################################################
# 문제 5: 간단한 계산기 (빈칸 채우기)
#############################################################
# 문제 설명
# 두 숫자에 대한 덧셈, 뺄셈, 곱셈, 나눗셈을 수행하는 프로그램입니다.
# 빈칸을 채워 프로그램을 완성하세요.
print("\n===== 문제 5: 간단한 계산기 =====")

num1 = int(input("첫 번째 숫자를 입력하세요: "))
num2 = int(________)  # 빈칸 1: 두 번째 숫자를 입력받는 코드를 작성하세요

print(f"{num1} + {num2} = {num1 + num2}")
print(f"{num1} - {num2} = {________}")  # 빈칸 2: 뺄셈 결과를 출력하세요
print(f"{num1} × {num2} = {num1 * num2}")
print(f"{num1} ÷ {num2} = {num1 / num2}")


#############################################################
# 문제 6: 별 출력하기 (빈칸 채우기)
#############################################################
# 문제 설명
# 사용자가 입력한 수만큼 별(*)을 출력하는 프로그램입니다.
# 빈칸을 채워 프로그램을 완성하세요.
print("\n===== 문제 6: 별 출력하기 =====")

rows = int(input("몇 줄의 별을 출력할까요? "))

for i in ________:  # 빈칸 1: 0부터 rows-1까지의 범위를 지정하세요
    print("*" * (i + 1))


#############################################################
# 문제 7: 최대값 찾기 (디버깅)
#############################################################
# 문제 설명
# 세 개의 숫자 중 가장 큰 값을 찾는 프로그램입니다.
# 오류가 있는 부분을 찾아 수정하세요.
print("\n===== 문제 7: 최대값 찾기 =====")

num1 = int(input("첫 번째 숫자를 입력하세요: "))
num2 = int(input("두 번째 숫자를 입력하세요: "))
num3 = int(input("세 번째 숫자를 입력하세요: "))

max_num = num1

if num2 > max_num
    max_num = num2  # 오류 1: if 문 뒤에 콜론(:)이 빠졌습니다

if num3 > max_num:
    max_num = num3

print(f"가장 큰 수는 {maxnum}입니다.")  # 오류 2: 변수명 오타 (maxnum -> max_num)


#############################################################
# 문제 8: 구구단 출력 (디버깅)
#############################################################
# 문제 설명
# 입력받은 숫자의 구구단을 출력하는 프로그램입니다.
# 오류가 있는 부분을 찾아 수정하세요.
print("\n===== 문제 8: 구구단 출력 =====")

number = input("몇 단을 출력할까요? ")  # 오류 1: 숫자로 변환해야 합니다

print(f"{number}단:")
for i in range(1, 10):
    result = number * i  # 오류 2: 문자열과 숫자는 곱셈 연산이 다르게 동작합니다
    print(f"{number} x {i} = {result}")


#############################################################
# 문제 9: 성적 판정 (디버깅)
#############################################################
# 문제 설명
# 점수를 입력받아 학점을 출력하는 프로그램입니다.
# 오류가 있는 부분을 찾아 수정하세요.
print("\n===== 문제 9: 성적 판정 =====")

score = int(input("점수를 입력하세요 (0-100): "))

if score >= 90:
    grade = "A"
else if score >= 80:  # 오류 1: 'else if'가 아니라 'elif'를 사용해야 합니다
    grade = "B"
elif score >= 70:
    grade = "C"
elif score >= 60:
    grade = "D"
else:
    grade = "F"

print(f"점수 {score}는 {grade} 학점입니다")


#############################################################
# 문제 10: 쇼핑 목록 (디버깅)
#############################################################
# 문제 설명
# 쇼핑 목록을 관리하는 간단한 프로그램입니다.
# 오류가 있는 부분을 찾아 수정하세요.
print("\n===== 문제 10: 쇼핑 목록 =====")

shopping_list = []

print("쇼핑 목록 관리 프로그램입니다.")
print("물건을 더 이상 추가하지 않으려면 '종료'를 입력하세요.")

while True:
    item = input("추가할 물건: ")
    
    if item = "종료":  # 오류 1: 비교 연산자는 == 여야 합니다
        break
        
    shopping_list.append(item)
    print(f"{item}이(가) 목록에 추가되었습니다.")

print("\n쇼핑 목록:")
for i in range(len(shopping_list)):
    print(f"{i+1}. {shopping_list[i]}")

if len(shopping_list) == 0  # 오류 2: if 문 뒤에 콜론(:)이 빠졌습니다
    print("쇼핑 목록이 비어있습니다.")




################ 2차 ##################

#############################################################
# 문제 1: 학교 급식 메뉴 출력하기 (전체 코드 작성)
#############################################################
# 문제 설명
# 일주일간의 급식 메뉴를 리스트에 저장하고, 사용자가 입력한 요일의 메뉴를 출력하는 프로그램을 작성하세요.
# 학교에서 급식 메뉴를 확인할 때 유용하게 사용할 수 있습니다.
print("\n===== 문제 1: 학교 급식 메뉴 출력하기 =====")
# 여기에 코드를 작성하세요.


# 힌트: 요일과 메뉴를 각각의 리스트로 저장하고, 사용자 입력값과 일치하는 요일의 인덱스를 찾아 메뉴를 출력하세요.


#############################################################
# 문제 2: 구구단 출력하기 (일부 코드 작성)
#############################################################
# 문제 설명
# 사용자로부터 숫자 하나를 입력받아 해당 숫자의 구구단을 출력하는 프로그램을 완성하세요.
# 구구단 공부를 할 때 활용할 수 있는 프로그램입니다.
print("\n===== 문제 2: 구구단 출력하기 =====")
# 숫자 입력받기
number = int(input("구구단을 출력할 숫자를 입력하세요(1~9): "))

# 여기에 구구단을 출력하는 코드를 작성하세요.


# 힌트: for 반복문을 사용하여 1부터 9까지 반복하면서 구구단을 출력하세요.


#############################################################
# 문제 3: 소수 찾기 (디버깅)
#############################################################
# 문제 설명
# 사용자가 입력한 숫자가 소수(prime number)인지 판별하는 프로그램입니다.
# 프로그램에 오류가 있어 제대로 작동하지 않습니다. 오류를 찾아 수정해보세요.
# 수학 시간에 소수 학습을 할 때 활용할 수 있는 프로그램입니다.
print("\n===== 문제 3: 소수 찾기 =====")
# 소수 판별 프로그램
number = int(input("소수인지 확인할 숫자를 입력하세요: "))

is_prime = True

if number < 2:
    is_prime = False
else:
    for i in range(2, number):
        if number / i == 0:  # 이 부분에 오류가 있습니다.
            is_prime = False
            break

if is_prime == True:
    print(f"{number}은(는) 소수입니다.")
else:
    print(f"{number}은(는) 소수가 아닙니다.")


#############################################################
# 문제 4: 별 모양 출력하기 (전체 코드 작성)
#############################################################
# 문제 설명
# 사용자로부터 숫자를 입력받아, 그 숫자만큼의 줄에 별(*) 모양을 삼각형 형태로 출력하는 프로그램을 작성하세요.
# 예를 들어 3을 입력하면 다음과 같이 출력됩니다:
# *
# **
# ***
# 미술 시간에 패턴을 그릴 때 참고할 수 있는 프로그램입니다.
print("\n===== 문제 4: 별 모양 출력하기 =====")
# 여기에 코드를 작성하세요.


# 힌트: 이중 for 문 또는 for 문과 * 연산자를 사용하여 별을 출력하세요.


#############################################################
# 문제 5: 동전 던지기 게임 (일부 코드 작성)
#############################################################
# 문제 설명
# 동전 던지기 시뮬레이션 프로그램을 완성하세요. 사용자가 입력한 횟수만큼 동전을 던져 앞면과 뒷면이 나온 횟수를 계산합니다.
# 확률 학습에 활용할 수 있는 프로그램입니다.
print("\n===== 문제 5: 동전 던지기 게임 =====")
import random

# 동전 던지기 횟수 입력받기
tosses = int(input("동전을 던질 횟수를 입력하세요: "))

heads = 0  # 앞면 횟수
tails = 0  # 뒷면 횟수

# 여기에 동전 던지기 시뮬레이션을 구현하는 코드를 작성하세요.


# 힌트: for 반복문으로 입력받은 횟수만큼 반복하고, random.randint(0, 1)를 사용하여 0(앞면)과 1(뒷면)을 무작위로 선택하세요.


# 결과 출력
print(f"앞면: {heads}회 ({heads/tosses*100:.1f}%)")
print(f"뒷면: {tails}회 ({tails/tosses*100:.1f}%)")


#############################################################
# 문제 6: 쇼핑 영수증 만들기 (디버깅)
#############################################################
# 문제 설명
# 물건의 이름과 가격을 입력받아 영수증을 출력하는 프로그램입니다.
# 프로그램에 오류가 있어 제대로 작동하지 않습니다. 오류를 찾아 수정해보세요.
# 가게 놀이를 할 때 영수증을 만들 수 있는 프로그램입니다.
print("\n===== 문제 6: 쇼핑 영수증 만들기 =====")
# 쇼핑 영수증 프로그램
items = []  # 상품 이름 리스트
prices = []  # 가격 리스트

# 상품 정보 입력받기
while True:
    item = input("상품 이름을 입력하세요 (종료하려면 '끝' 입력): ")
    
    if item = "끝":  # 이 부분에 오류가 있습니다.
        break
    
    price = int(input(f"{item}의 가격을 입력하세요: "))
    
    items.append(item)
    prices.append(price)

# 영수증 출력
print("\n===== 영수증 =====")
total = 0

for i in range(len(items)):
    print(f"{items[i]}: {prices[i]}원")
    total += prices[i]

print(f"총 금액: {total}원")


#############################################################
# 문제 7: 학급 키 평균 계산하기 (일부 코드 작성)
#############################################################
# 문제 설명
# 학급 학생들의 키를 입력받아 평균 키를 계산하는 프로그램을 완성하세요.
# 학생 수는 미리 입력받습니다. 체육 시간에 통계를 내야 할 때 유용한 프로그램입니다.
print("\n===== 문제 7: 학급 키 평균 계산하기 =====")
# 학생 수 입력받기
num_students = int(input("학생 수를 입력하세요: "))

# 빈 리스트 생성
heights = []

# 여기에 학생들의 키를 입력받고 리스트에 추가하는 코드를 작성하세요.


# 힌트: for 반복문을 사용하여 학생 수만큼 반복하면서 키를 입력받아 리스트에 추가하세요.


# 평균 계산 및 출력
if len(heights) > 0:
    average_height = sum(heights) / len(heights)
    print(f"학급의 평균 키는 {average_height:.1f}cm입니다.")
else:
    print("입력된 키가 없습니다.")


#############################################################
# 문제 8: 숫자 뒤집기 (전체 코드 작성)
#############################################################
# 문제 설명
# 사용자로부터 숫자를 입력받아 뒤집어서 출력하는 프로그램을 작성하세요.
# 예를 들어, 1234를 입력하면 4321을 출력합니다.
# 수학 문제를 풀 때 숫자를 뒤집어 확인해야 하는 경우에 유용한 프로그램입니다.
print("\n===== 문제 8: 숫자 뒤집기 =====")
# 여기에 코드를 작성하세요.
num = int(input("숫자를 입력해라 : "))
reverse = 1234
4.321
# result = num[::-1]
while num:
    reverse = (reverse * 10) + (num % 10)
    num //= 10

print(result)

# 힌트: 문자열로 변환한 후 인덱싱이나 슬라이싱을 활용하거나, 수학적 연산을 사용하여 뒤집을 수 있습니다.


#############################################################
# 문제 9: 로또 번호 생성기 (일부 코드 작성)
#############################################################
# 문제 설명
# 1부터 45까지의 숫자 중에서 중복되지 않는 6개의 숫자를 무작위로 선택하여 로또 번호를 생성하는 프로그램을 완성하세요.
# 선택된 번호는 오름차순으로 정렬하여 출력합니다.
# 가족 행사나 친구들과의 모임에서 재미로 로또 번호를 생성할 때 활용할 수 있습니다.

print("\n===== 문제 9: 로또 번호 생성기 =====")
import random
lotto_numbers = []
num = 0

# 여기에 로또 번호를 생성하는 코드를 작성하세요.
while True:
    num = random.randint(1, 45) # 무작위숫자 추첨

    if num not in lotto_numbers: # 중복 확인
        lotto_numbers.append(num)

    if len(lotto_numbers) == 6: # 6개 뽑히면 종료
        break

# 힌트: random.randint() 함수를 사용하여 1부터 45 사이의 난수를 생성하고,
# 생성된 번호가 이미 선택된 번호인지 확인 후 리스트에 추가하세요.
# 최종 번호 리스트는 sort() 메서드를 사용하여 정렬하세요.

# 결과 출력
print("생성된 로또 번호:", lotto_numbers)


#############################################################
# 문제 10: 점수 분류하기 (디버깅)
#############################################################
# 문제 설명
# 학생들의 점수를 입력받아 각 점수대별로 학생 수를 계산하는 프로그램입니다.
# 프로그램에 오류가 있어 제대로 작동하지 않습니다. 오류를 찾아 수정해보세요.
# 선생님이 학생들의 성적을 분석할 때 활용할 수 있는 프로그램입니다.
print("\n===== 문제 10: 점수 분류하기 =====")
# 점수 분류 프로그램
scores = []  # 점수 리스트

# 점수 입력받기
while True:
    score = input("점수를 입력하세요 (종료하려면 -1 입력): ")
    
    if score == -1:  # 이 부분에 오류가 있습니다.
        break
    
    if 0 <= score <= 100:
        scores.append(score)  # 이 부분에도 오류가 있습니다.
    else:
        print("0부터 100 사이의 점수만 입력하세요.")

# 점수대별 학생 수 계산
a_count = 0  # 90-100점
b_count = 0  # 80-89점
c_count = 0  # 70-79점
d_count = 0  # 60-69점
f_count = 0  # 0-59점

for score in scores:
    if score >= 90:
        a_count += 1
    elif score >= 80:
        b_count += a_count  # 이 부분에도 오류가 있습니다.
    elif score >= 70:
        c_count += 1
    elif score >= 60:
        d_count += 1
    else:
        f_count += 1

# 결과 출력
print(f"A (90-100): {a_count}명")
print(f"B (80-89): {b_count}명")
print(f"C (70-79): {c_count}명")
print(f"D (60-69): {d_count}명")
print(f"F (0-59): {f_count}명")



