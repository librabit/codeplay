1. 게임 디자인
 - 텍스트만으로 이뤄지는 게임
 - 연애 시뮬레이션을 텍스트 만으로 꾸미되, 중학생이라는 설정에 맞게
 다양한 재미있는 대사를 준비하여 텍스트 게임의 지루함을 넘어보고 싶었다.
 - 주인공이 3명의 여성과 연애를 시도하고, 각각의 여성과의 대화를 통해
 성공과 실패가 결정됨. ==> 캡쳐1. 3명의 연애대상 선택화면
 - 게임이 끝나면 3명의 여성과의 연애 성공/실패 여부에 따라
 8개의 최종 엔딩을 만듬. ==> 캡쳐2. 엔딩 텍스트 데이터 화면 캡쳐

2. 필요데이터 준비
 - 게임 특성상 다량의 대사가 필요하기 때문에, 팀원들 중 스토리 팀에서
 대사를 정리 ==> 캡쳐3. 클래스룸의 대사정리 파일 중 일부화면 캡쳐
 - 정리된 대사는 모듈로 활용하기 위해, 별도의 PY파일로 만들어둠
 ==> 캡쳐4. VS코드의 프로젝트 폴더에서 파일들 목록부분 캡쳐

3. 코딩 구조 정하기
 - 미리 정리해 둔 게임 내 대사가 담긴 텍스트 정리파일을 모듈로 불러들임
 ==> 캡쳐5. 메인파일 중 맨 위 import 부분 화면 캡쳐
 - 게임 내에서 필요한 변수와 함수 등을 미리 정의해 둠.
 ==> 캡쳐6. love_score = 0 부터 변수부분 화면 캡쳐
 - 본 게임이 시작되면 3명의 대상과 연애를 선택해 할 수 있게 반복문 설정
 ==> 캡쳐7. while running 부터 women.pop(choice-1) 까지 캡쳐
 - 3명과 모두 연애를 시도하거나, 중간에 포기가 가능하도록 선택지를 줌.

4. 변수 및 함수 정의
 - 코드 중 가장 많은 양을 차지하는 텍스트 데이터는 양식을 정해 리스트 데이터로 만듬.
 ==> 캡쳐8. text_data_01.py의 1~11번줄까지 캡쳐
 - 정해진 텍스트 데이터 리스트를 순서대로 불러와 대화선택지를 보여주고,
 선택을 완료하면 대화의 결과와 함께, 해당 선택의 점수를 저장할 수 있도록 함수 정의.
 ==> 캡쳐9. 메인파일중 함수정의부분 def question10 전체 캡쳐
 - 대화 함수는 텍스트 데이터의 리스트를 순서대로 불러와 화면에 출력해주는 역할과
 점수를 합산하고 결과를 보여주는 역할을 함.
 - 각 연애대상과 대화를 마치면, 성공인지 실패인지를 기록해 두는 변수를 인물별로 만들어
 최종 8가지 경우의 수 엔딩에 사용하도록 정의
 ==> 캡쳐10. ending.py 파일 중 real_ending_000 부터 아래로 일부 캡쳐
 
5. 메인 프로그램 작성
 - 위에서 정의한 대화 함수를 이용해 3명의 연애대상 선택지에서 고른 내용에 따라
 자동으로 텍스트 데이터를 불러와 질문을 이어가도록 반복문 작성
 ==> 캡쳐11. 메인 프로그램 중 if chosen_woman == "선배" 부터 아래 elif 동갑 라인까지 캡쳐
 - 3명 모두 강제적으로 선택해 연애를 시작하지 않고, 중간에 그만둘 수 있는 선택지를 둠.
 ==> 캡쳐12. 게임화면 캡쳐 중 가장 처음 보이는 선배/동갑/후배/끝 화면캡쳐 사용
 - 텍스트 게임의 특성상, 이전에 보여졌던 텍스트 내용이 명령 프롬프트에 계속 남아서
 시스템 명령어를 통해 화면을 청소해주는 기능을 넣어 지금 보이는 대사에만 집중할 수 있도록
 코딩함.
 ==> 캡쳐13. import os 와 아랫줄 두줄 캡쳐 + 게임 코드 중 clear() 코드가 있는 곳 아무데나 캡쳐

6. 게임 엔딩 정리
- 기본값으로 3명의 연애대상과 모두 실패하도록 하고, 성공했을 경우를 따져 8개의 엔딩을
볼 수 있도록 8개의 조건문으로 나누어 코딩.
==> 캡쳐14. 메인화면 중 success = [score1, score2, score3] 부터 맨끝까지 캡쳐

---------------------------------------------

